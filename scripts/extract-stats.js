const fs = require('fs');
const path = require('path');

const whitelistPath = path.join(__dirname, '..', 'public', 'data', 'whitelist.json');
const statsDir = path.join(__dirname, '..', 'public', 'data', 'stats');
const advancementsDir = path.join(__dirname, '..', 'public', 'data', 'advancements');
const outputPath = path.join(__dirname, '..', 'src', 'data', 'fullPlayerStats.ts');
const achievementsOutputPath = path.join(__dirname, '..', 'src', 'data', 'playerAchievements.ts');
const playerDataOutputPath = path.join(__dirname, '..', 'src', 'data', 'playerData.ts');

// Read whitelist
const whitelist = JSON.parse(fs.readFileSync(whitelistPath, 'utf8'));

// Extract player stats
const playerStats = {};
whitelist.forEach(player => {
  const statsFile = path.join(statsDir, `${player.uuid}.json`);
  if (fs.existsSync(statsFile)) {
    const stats = JSON.parse(fs.readFileSync(statsFile, 'utf8'));
    playerStats[player.uuid] = stats;
  }
});

// Extract achievements
const playerAchievements = {};
whitelist.forEach(player => {
  const advancementsFile = path.join(advancementsDir, `${player.uuid}.json`);
  if (fs.existsSync(advancementsFile)) {
    const advancements = JSON.parse(fs.readFileSync(advancementsFile, 'utf8'));
    // Count completed achievements
    let count = 0;
    Object.values(advancements).forEach(advancement => {
      if (advancement.done === true) {
        count++;
      }
    });
    playerAchievements[player.uuid] = count;
  } else {
    playerAchievements[player.uuid] = 0;
  }
});

// Write player stats
const statsOutput = `import { MinecraftStats } from '../types';

// This file is auto-generated by extract-stats.js
// Run 'npm run update-data' to update

export const fullPlayerStats: { [uuid: string]: MinecraftStats } = ${JSON.stringify(playerStats, null, 2)};`;

fs.writeFileSync(outputPath, statsOutput);
console.log('Extracted player stats to:', outputPath);

// Write achievements
const achievementsOutput = `// This file is auto-generated by extract-stats.js
// Contains achievement counts for each player

export const playerAchievements: { [uuid: string]: number } = ${JSON.stringify(playerAchievements, null, 2)};`;

fs.writeFileSync(achievementsOutputPath, achievementsOutput);
console.log('Extracted achievements to:', achievementsOutputPath);

// Write player data (whitelist)
const playerDataOutput = `// This file is auto-generated by extract-stats.js
// Contains player UUID to name mapping

export const whitelistData = ${JSON.stringify(whitelist, null, 2)};`;

fs.writeFileSync(playerDataOutputPath, playerDataOutput);
console.log('Extracted player data to:', playerDataOutputPath);